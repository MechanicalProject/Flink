/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    implementation 'org.apache.flink:flink-java:1.17.0'
    implementation 'org.apache.flink:flink-streaming-java:1.17.0'
    implementation 'org.apache.flink:flink-connector-kafka:1.17.0' // Kafka 커넥터가 필요한 경우
    implementation 'org.apache.flink:flink-clients:1.17.0'
    implementation 'org.apache.kafka:kafka-clients:3.2.3'
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'org.apache.flink:flink-connector-files:1.17.0'
    implementation 'org.apache.flink:flink-core:1.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    //implementation files('/Users/jungeui/docker_volume/flink/flink-shaded-hadoop-3-uber-3.1.1.7.2.9.0-173-9.0.jar')
}

application {
    // 애플리케이션의 메인 클래스 정의
    mainClass = 'FlinkApp'
}
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
}

tasks.withType(Test) {
    enabled = false
}


// JAR 파일에 필요한 모든 의존성 포함 설정
jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes(
            'Main-Class': 'FlinkApp'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
