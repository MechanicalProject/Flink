version: "3"

services:
  jobmanager:
    image: flink:1.18.0
    volumes:
      - "./base_files/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml"
      - "../src:/opt/flink/src:z"
      - "../jobmanager_log:/opt/flink/log:z"
    hostname: "jobmanager"
    ports:
      - "8081:8081"
      - "6123:6123"
      - "6124:6124"
    expose:
      - "6123"
      - "9250"
    command: jobmanager
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
      - ff-network

  taskmanager:
    image: flink:1.18.0
    volumes:
      - "./base_files/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml"
      - "../src:/opt/flink/src:z"
      - "../taskmanager_log:/opt/flink/log:z"
    ports:
      - "9251:9251"
    expose:
      - "6121"
      - "6122"
      - "6123"
      - "9250"
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - jobmanager:jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=20
    networks:
      - ff-network      

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - ff-network
  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    hostname: kafka
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:19092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - ff-network      
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: dachery-kafka-ui
    hostname: kafka-ui
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: dachery-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      - kafka
    networks:
      - ff-network

  prometheus:
    image: prom/prometheus:v2.16.0
    container_name: prometheus
    links:
      - jobmanager:jobmanager
      - taskmanager:taskmanager
    command:
      - '--web.listen-address=0.0.0.0:9099'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./data/prometheus:/etc/prometheus
      - ./data/prometheus/data:/prometheus
    extra_hosts:
      - host.docker.internal:host-gateway 
    ports:
      - 9099:9099
    networks:
      - ff-network

  grafana:
    container_name: grafana
    image: grafana/grafana:6.6.2
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./data/grafana/data:/var/lib/grafana
      - ./data/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 9900:3000
    depends_on:
      - prometheus
    extra_hosts:
      - host.docker.internal:host-gateway 
    networks:
      - ff-network

networks:
  ff-network:
    external: true